/*----- PROTECTED REGION ID(RxEmulator.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        RxEmulator.cpp
//
// description : C++ source for the RxEmulator class and its commands.
//               The class is derived from Device. It represents the
//               CORBA servant object which will be accessed from the
//               network. All commands which can be executed on the
//               RxEmulator are implemented in this file.
//
// project :     RxEmulator
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <RxEmulator.h>
#include <RxEmulatorClass.h>

/*----- PROTECTED REGION END -----*/	//	RxEmulator.cpp

/**
 *  RxEmulator class description:
 *    Class emulating LMC-Rx interface
 */

//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name             |  Method name
//================================================================
//  State                    |  Inherited (no method)
//  Status                   |  Inherited (no method)
//  Capture                  |  capture
//  ConfigureBand            |  configure_band
//  SetEngineeringInterface  |  set_engineering_interface
//  SetExpectedOnline        |  set_expected_online
//  SetSubElementMode        |  set_sub_element_mode
//  SetNoiseSource           |  set_noise_source
//  Synchronise              |  synchronise
//  SetAttenuation           |  set_attenuation
//================================================================

//================================================================
//  Attributes managed are:
//================================================================
//  attenuation             |  Tango::DevFloat	Scalar
//  b1_capabilityState      |  Tango::DevEnum	Scalar
//  b1_samplingClock        |  Tango::DevLong	Scalar
//  b1_synchronisedClock    |  Tango::DevShort	Scalar
//  b2_capabilityState      |  Tango::DevEnum	Scalar
//  b2_samplingClock        |  Tango::DevLong	Scalar
//  b2_synchronisedClock    |  Tango::DevShort	Scalar
//  b3_capabilityState      |  Tango::DevEnum	Scalar
//  b3_samplingClock        |  Tango::DevLong	Scalar
//  b3_synchronisedClock    |  Tango::DevShort	Scalar
//  b4_capabilityState      |  Tango::DevEnum	Scalar
//  b4_samplingClock        |  Tango::DevLong	Scalar
//  b4_synchronisedClock    |  Tango::DevShort	Scalar
//  b5_capabilityState      |  Tango::DevEnum	Scalar
//  b5_samplingClock        |  Tango::DevLong	Scalar
//  b5_synchronisedClock    |  Tango::DevShort	Scalar
//  noisesource_offTime     |  Tango::DevLong	Scalar
//  noisesource_onTime      |  Tango::DevLong	Scalar
//  noisesource_period      |  Tango::DevLong	Scalar
//  noisesource_startTime   |  Tango::DevFloat	Scalar
//  rx_fwVersions           |  Tango::DevString	Scalar
//  rx_healthState          |  Tango::DevEnum	Scalar
//  rx_mode                 |  Tango::DevEnum	Scalar
//  rx_powerState           |  Tango::DevEnum	Scalar
//  rx_protocolVersion      |  Tango::DevString	Scalar
//  rx_serialNumbers        |  Tango::DevString	Scalar
//  rx_swVersions           |  Tango::DevString	Scalar
//  rxpu_expectedOnline     |  Tango::DevShort	Scalar
//  rxpu_healthState        |  Tango::DevEnum	Scalar
//  rxpu_hourCounter        |  Tango::DevLong	Scalar
//  rxpu_operationalTime    |  Tango::DevLong	Scalar
//  rxpu_supplyCurrent      |  Tango::DevFloat	Scalar
//  rxpu_supplyVoltage      |  Tango::DevFloat	Scalar
//  rxpu_temperature        |  Tango::DevFloat	Scalar
//  rxs123_adcPower         |  Tango::DevFloat	Scalar
//  rxs123_adcVariance      |  Tango::DevFloat	Scalar
//  rxs123_expectedOnline   |  Tango::DevShort	Scalar
//  rxs123_healthState      |  Tango::DevEnum	Scalar
//  rxs123_hourCounter      |  Tango::DevLong	Scalar
//  rxs123_operationalTime  |  Tango::DevLong	Scalar
//  rxs123_supplyCurrent    |  Tango::DevFloat	Scalar
//  rxs123_supplyVoltage    |  Tango::DevFloat	Scalar
//  rxs123_temperature      |  Tango::DevFloat	Scalar
//  rxs45_adcPower          |  Tango::DevFloat	Scalar
//  rxs45_adcVariance       |  Tango::DevFloat	Scalar
//  rxs45_expectedOnline    |  Tango::DevShort	Scalar
//  rxs45_healthState       |  Tango::DevEnum	Scalar
//  rxs45_hourCounter       |  Tango::DevLong	Scalar
//  rxs45_supplyCurrent     |  Tango::DevFloat	Scalar
//  rxs45_supplyVoltage     |  Tango::DevFloat	Scalar
//  rxs45_temperature       |  Tango::DevFloat	Scalar
//================================================================

namespace RxEmulator_ns
{
/*----- PROTECTED REGION ID(RxEmulator::namespace_starting) ENABLED START -----*/

//	static initializations

/*----- PROTECTED REGION END -----*/	//	RxEmulator::namespace_starting

//--------------------------------------------------------
/**
 *	Method      : RxEmulator::RxEmulator()
 *	Description : Constructors for a Tango device
 *                implementing the classRxEmulator
 */
//--------------------------------------------------------
RxEmulator::RxEmulator(Tango::DeviceClass *cl, string &s)
 : SEEmulatorBase(cl, s.c_str())
{
	/*----- PROTECTED REGION ID(RxEmulator::constructor_1) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::constructor_1
}
//--------------------------------------------------------
RxEmulator::RxEmulator(Tango::DeviceClass *cl, const char *s)
 : SEEmulatorBase(cl, s)
{
	/*----- PROTECTED REGION ID(RxEmulator::constructor_2) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::constructor_2
}
//--------------------------------------------------------
RxEmulator::RxEmulator(Tango::DeviceClass *cl, const char *s, const char *d)
 : SEEmulatorBase(cl, s, d)
{
	/*----- PROTECTED REGION ID(RxEmulator::constructor_3) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::constructor_3
}

//--------------------------------------------------------
/**
 *	Method      : RxEmulator::delete_device()
 *	Description : will be called at device destruction or at init command
 */
//--------------------------------------------------------
void RxEmulator::delete_device()
{
	DEBUG_STREAM << "RxEmulator::delete_device() " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::delete_device) ENABLED START -----*/
	
	//	Delete device allocated objects
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::delete_device
	delete[] attr_attenuation_read;
	delete[] attr_b1_capabilityState_read;
	delete[] attr_b1_samplingClock_read;
	delete[] attr_b1_synchronisedClock_read;
	delete[] attr_b2_capabilityState_read;
	delete[] attr_b2_samplingClock_read;
	delete[] attr_b2_synchronisedClock_read;
	delete[] attr_b3_capabilityState_read;
	delete[] attr_b3_samplingClock_read;
	delete[] attr_b3_synchronisedClock_read;
	delete[] attr_b4_capabilityState_read;
	delete[] attr_b4_samplingClock_read;
	delete[] attr_b4_synchronisedClock_read;
	delete[] attr_b5_capabilityState_read;
	delete[] attr_b5_samplingClock_read;
	delete[] attr_b5_synchronisedClock_read;
	delete[] attr_noisesource_offTime_read;
	delete[] attr_noisesource_onTime_read;
	delete[] attr_noisesource_period_read;
	delete[] attr_noisesource_startTime_read;
	delete[] attr_rx_fwVersions_read;
	delete[] attr_rx_healthState_read;
	delete[] attr_rx_mode_read;
	delete[] attr_rx_powerState_read;
	delete[] attr_rx_protocolVersion_read;
	delete[] attr_rx_serialNumbers_read;
	delete[] attr_rx_swVersions_read;
	delete[] attr_rxpu_expectedOnline_read;
	delete[] attr_rxpu_healthState_read;
	delete[] attr_rxpu_hourCounter_read;
	delete[] attr_rxpu_operationalTime_read;
	delete[] attr_rxpu_supplyCurrent_read;
	delete[] attr_rxpu_supplyVoltage_read;
	delete[] attr_rxpu_temperature_read;
	delete[] attr_rxs123_adcPower_read;
	delete[] attr_rxs123_adcVariance_read;
	delete[] attr_rxs123_expectedOnline_read;
	delete[] attr_rxs123_healthState_read;
	delete[] attr_rxs123_hourCounter_read;
	delete[] attr_rxs123_operationalTime_read;
	delete[] attr_rxs123_supplyCurrent_read;
	delete[] attr_rxs123_supplyVoltage_read;
	delete[] attr_rxs123_temperature_read;
	delete[] attr_rxs45_adcPower_read;
	delete[] attr_rxs45_adcVariance_read;
	delete[] attr_rxs45_expectedOnline_read;
	delete[] attr_rxs45_healthState_read;
	delete[] attr_rxs45_hourCounter_read;
	delete[] attr_rxs45_supplyCurrent_read;
	delete[] attr_rxs45_supplyVoltage_read;
	delete[] attr_rxs45_temperature_read;

	if (Tango::Util::instance()->is_svr_shutting_down()==false  &&
		Tango::Util::instance()->is_device_restarting(device_name)==false &&
		Tango::Util::instance()->is_svr_starting()==false)
	{
		//	If not shutting down call delete device for inherited object
		SEEmulatorBase_ns::SEEmulatorBase::delete_device();
	}
}

//--------------------------------------------------------
/**
 *	Method      : RxEmulator::init_device()
 *	Description : will be called at device initialization.
 */
//--------------------------------------------------------
void RxEmulator::init_device()
{
	DEBUG_STREAM << "RxEmulator::init_device() create device " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::init_device_before) ENABLED START -----*/
	
	//	Initialization before get_device_property() call
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::init_device_before
	
	if (Tango::Util::instance()->is_svr_starting() == false  &&
		Tango::Util::instance()->is_device_restarting(device_name)==false)
	{
		//	If not starting up call init device for inherited object
		SEEmulatorBase_ns::SEEmulatorBase::init_device();
	}
	//	No device property to be read from database
	
	attr_attenuation_read = new Tango::DevFloat[1];
	attr_b1_capabilityState_read = new b1_capabilityStateEnum[1];
	attr_b1_samplingClock_read = new Tango::DevLong[1];
	attr_b1_synchronisedClock_read = new Tango::DevShort[1];
	attr_b2_capabilityState_read = new b2_capabilityStateEnum[1];
	attr_b2_samplingClock_read = new Tango::DevLong[1];
	attr_b2_synchronisedClock_read = new Tango::DevShort[1];
	attr_b3_capabilityState_read = new b3_capabilityStateEnum[1];
	attr_b3_samplingClock_read = new Tango::DevLong[1];
	attr_b3_synchronisedClock_read = new Tango::DevShort[1];
	attr_b4_capabilityState_read = new b4_capabilityStateEnum[1];
	attr_b4_samplingClock_read = new Tango::DevLong[1];
	attr_b4_synchronisedClock_read = new Tango::DevShort[1];
	attr_b5_capabilityState_read = new b5_capabilityStateEnum[1];
	attr_b5_samplingClock_read = new Tango::DevLong[1];
	attr_b5_synchronisedClock_read = new Tango::DevShort[1];
	attr_noisesource_offTime_read = new Tango::DevLong[1];
	attr_noisesource_onTime_read = new Tango::DevLong[1];
	attr_noisesource_period_read = new Tango::DevLong[1];
	attr_noisesource_startTime_read = new Tango::DevFloat[1];
	attr_rx_fwVersions_read = new Tango::DevString[1];
	attr_rx_healthState_read = new rx_healthStateEnum[1];
	attr_rx_mode_read = new rx_modeEnum[1];
	attr_rx_powerState_read = new rx_powerStateEnum[1];
	attr_rx_protocolVersion_read = new Tango::DevString[1];
	attr_rx_serialNumbers_read = new Tango::DevString[1];
	attr_rx_swVersions_read = new Tango::DevString[1];
	attr_rxpu_expectedOnline_read = new Tango::DevShort[1];
	attr_rxpu_healthState_read = new rxpu_healthStateEnum[1];
	attr_rxpu_hourCounter_read = new Tango::DevLong[1];
	attr_rxpu_operationalTime_read = new Tango::DevLong[1];
	attr_rxpu_supplyCurrent_read = new Tango::DevFloat[1];
	attr_rxpu_supplyVoltage_read = new Tango::DevFloat[1];
	attr_rxpu_temperature_read = new Tango::DevFloat[1];
	attr_rxs123_adcPower_read = new Tango::DevFloat[1];
	attr_rxs123_adcVariance_read = new Tango::DevFloat[1];
	attr_rxs123_expectedOnline_read = new Tango::DevShort[1];
	attr_rxs123_healthState_read = new rxs123_healthStateEnum[1];
	attr_rxs123_hourCounter_read = new Tango::DevLong[1];
	attr_rxs123_operationalTime_read = new Tango::DevLong[1];
	attr_rxs123_supplyCurrent_read = new Tango::DevFloat[1];
	attr_rxs123_supplyVoltage_read = new Tango::DevFloat[1];
	attr_rxs123_temperature_read = new Tango::DevFloat[1];
	attr_rxs45_adcPower_read = new Tango::DevFloat[1];
	attr_rxs45_adcVariance_read = new Tango::DevFloat[1];
	attr_rxs45_expectedOnline_read = new Tango::DevShort[1];
	attr_rxs45_healthState_read = new rxs45_healthStateEnum[1];
	attr_rxs45_hourCounter_read = new Tango::DevLong[1];
	attr_rxs45_supplyCurrent_read = new Tango::DevFloat[1];
	attr_rxs45_supplyVoltage_read = new Tango::DevFloat[1];
	attr_rxs45_temperature_read = new Tango::DevFloat[1];
	/*----- PROTECTED REGION ID(RxEmulator::init_device) ENABLED START -----*/
	
	//	Initialize device
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::init_device
}


//--------------------------------------------------------
/**
 *	Method      : RxEmulator::always_executed_hook()
 *	Description : method always executed before any command is executed
 */
//--------------------------------------------------------
void RxEmulator::always_executed_hook()
{
	DEBUG_STREAM << "RxEmulator::always_executed_hook()  " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::always_executed_hook) ENABLED START -----*/
	
	//	code always executed before all requests
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::always_executed_hook
}

//--------------------------------------------------------
/**
 *	Method      : RxEmulator::read_attr_hardware()
 *	Description : Hardware acquisition for attributes
 */
//--------------------------------------------------------
void RxEmulator::read_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "RxEmulator::read_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_attr_hardware) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_attr_hardware
}

//--------------------------------------------------------
/**
 *	Read attribute attenuation related method
 *	Description: Overall device attenuation. Default and persistence.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_attenuation(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_attenuation(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_attenuation) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_attenuation_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_attenuation
}
//--------------------------------------------------------
/**
 *	Read attribute b1_capabilityState related method
 *	Description: Band capability state
 *
 *	Data type:	Tango::DevEnum (b1_capabilityStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b1_capabilityState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b1_capabilityState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b1_capabilityState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b1_capabilityState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b1_capabilityState
}
//--------------------------------------------------------
/**
 *	Read attribute b1_samplingClock related method
 *	Description: Band sampling clock frequency in Hertz
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b1_samplingClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b1_samplingClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b1_samplingClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b1_samplingClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b1_samplingClock
}
//--------------------------------------------------------
/**
 *	Read attribute b1_synchronisedClock related method
 *	Description: Band clock synchronised to TFR. 
 *               Normally a boolean flag, but CHANGE_EVENT cannot be defined for boolean data types.
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b1_synchronisedClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b1_synchronisedClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b1_synchronisedClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b1_synchronisedClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b1_synchronisedClock
}
//--------------------------------------------------------
/**
 *	Read attribute b2_capabilityState related method
 *	Description: Band capability state
 *
 *	Data type:	Tango::DevEnum (b2_capabilityStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b2_capabilityState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b2_capabilityState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b2_capabilityState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b2_capabilityState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b2_capabilityState
}
//--------------------------------------------------------
/**
 *	Read attribute b2_samplingClock related method
 *	Description: Band sampling clock frequency in Hertz
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b2_samplingClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b2_samplingClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b2_samplingClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b2_samplingClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b2_samplingClock
}
//--------------------------------------------------------
/**
 *	Read attribute b2_synchronisedClock related method
 *	Description: Band clock synchronised to TFR. 
 *               Normally a boolean flag, but CHANGE_EVENT cannot be defined for boolean data types.
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b2_synchronisedClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b2_synchronisedClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b2_synchronisedClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b2_synchronisedClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b2_synchronisedClock
}
//--------------------------------------------------------
/**
 *	Read attribute b3_capabilityState related method
 *	Description: Band capability state
 *
 *	Data type:	Tango::DevEnum (b3_capabilityStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b3_capabilityState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b3_capabilityState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b3_capabilityState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b3_capabilityState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b3_capabilityState
}
//--------------------------------------------------------
/**
 *	Read attribute b3_samplingClock related method
 *	Description: Band sampling clock frequency in Hertz
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b3_samplingClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b3_samplingClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b3_samplingClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b3_samplingClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b3_samplingClock
}
//--------------------------------------------------------
/**
 *	Read attribute b3_synchronisedClock related method
 *	Description: Band clock synchronised to TFR.  Normally a boolean flag, but CHANGE_EVENT cannot be defined for boolean data types
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b3_synchronisedClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b3_synchronisedClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b3_synchronisedClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b3_synchronisedClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b3_synchronisedClock
}
//--------------------------------------------------------
/**
 *	Read attribute b4_capabilityState related method
 *	Description: Band capability state
 *
 *	Data type:	Tango::DevEnum (b4_capabilityStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b4_capabilityState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b4_capabilityState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b4_capabilityState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b4_capabilityState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b4_capabilityState
}
//--------------------------------------------------------
/**
 *	Read attribute b4_samplingClock related method
 *	Description: Band sampling clock frequency in Hertz
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b4_samplingClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b4_samplingClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b4_samplingClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b4_samplingClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b4_samplingClock
}
//--------------------------------------------------------
/**
 *	Read attribute b4_synchronisedClock related method
 *	Description: Band clock synchronised to TFR.  Normally a boolean flag, but CHANGE_EVENT cannot be defined for boolean data types
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b4_synchronisedClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b4_synchronisedClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b4_synchronisedClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b4_synchronisedClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b4_synchronisedClock
}
//--------------------------------------------------------
/**
 *	Read attribute b5_capabilityState related method
 *	Description: Band capability state
 *
 *	Data type:	Tango::DevEnum (b5_capabilityStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b5_capabilityState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b5_capabilityState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b5_capabilityState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b5_capabilityState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b5_capabilityState
}
//--------------------------------------------------------
/**
 *	Read attribute b5_samplingClock related method
 *	Description: Band sampling clock frequency in Hertz
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b5_samplingClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b5_samplingClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b5_samplingClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b5_samplingClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b5_samplingClock
}
//--------------------------------------------------------
/**
 *	Read attribute b5_synchronisedClock related method
 *	Description: Band clock synchronised to TFR.  Normally a boolean flag, but CHANGE_EVENT cannot be defined for boolean data types
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_b5_synchronisedClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_b5_synchronisedClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_b5_synchronisedClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_b5_synchronisedClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_b5_synchronisedClock
}
//--------------------------------------------------------
/**
 *	Read attribute noisesource_offTime related method
 *	Description: Overall device noise source off time
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_noisesource_offTime(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_noisesource_offTime(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_noisesource_offTime) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_noisesource_offTime_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_noisesource_offTime
}
//--------------------------------------------------------
/**
 *	Read attribute noisesource_onTime related method
 *	Description: Overall device noise source offtime
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_noisesource_onTime(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_noisesource_onTime(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_noisesource_onTime) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_noisesource_onTime_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_noisesource_onTime
}
//--------------------------------------------------------
/**
 *	Read attribute noisesource_period related method
 *	Description: Overall device noise source period.
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_noisesource_period(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_noisesource_period(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_noisesource_period) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_noisesource_period_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_noisesource_period
}
//--------------------------------------------------------
/**
 *	Read attribute noisesource_startTime related method
 *	Description: Overall device noise source start time.
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_noisesource_startTime(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_noisesource_startTime(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_noisesource_startTime) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_noisesource_startTime_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_noisesource_startTime
}
//--------------------------------------------------------
/**
 *	Read attribute rx_fwVersions related method
 *	Description: Firmware serial numbers
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_fwVersions(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_fwVersions(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_fwVersions) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_fwVersions_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_fwVersions
}
//--------------------------------------------------------
/**
 *	Read attribute rx_healthState related method
 *	Description: Aggregated sub-element health
 *               Normal = all MCs healthy. Degraded = at least one RX Sampler and RXPU healthy.
 *               Failed = no sampler is healthy or RXPU is not healthy.
 *
 *	Data type:	Tango::DevEnum (rx_healthStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_healthState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_healthState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_healthState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_healthState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_healthState
}
//--------------------------------------------------------
/**
 *	Read attribute rx_mode related method
 *	Description: 
 *
 *	Data type:	Tango::DevEnum (rx_modeEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_mode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_mode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_mode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_mode_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_mode
}
//--------------------------------------------------------
/**
 *	Read attribute rx_powerState related method
 *	Description: Current power state
 *
 *	Data type:	Tango::DevEnum (rx_powerStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_powerState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_powerState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_powerState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_powerState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_powerState
}
//--------------------------------------------------------
/**
 *	Read attribute rx_protocolVersion related method
 *	Description: Device server protocol version
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_protocolVersion(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_protocolVersion(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_protocolVersion) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_protocolVersion_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_protocolVersion
}
//--------------------------------------------------------
/**
 *	Read attribute rx_serialNumbers related method
 *	Description: Device Serial number
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_serialNumbers(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_serialNumbers(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_serialNumbers) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_serialNumbers_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_serialNumbers
}
//--------------------------------------------------------
/**
 *	Read attribute rx_swVersions related method
 *	Description: Software serial numbers
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rx_swVersions(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rx_swVersions(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rx_swVersions) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rx_swVersions_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rx_swVersions
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_expectedOnline related method
 *	Description: Indicates whether major component is expected online.  mcHealthStatus 
 *               will be normal if this value is set to false and the device is not installed or offline.
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_expectedOnline(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_expectedOnline(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_expectedOnline) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_expectedOnline_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_expectedOnline
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_healthState related method
 *	Description: Major component health status
 *
 *	Data type:	Tango::DevEnum (rxpu_healthStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_healthState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_healthState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_healthState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_healthState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_healthState
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_hourCounter related method
 *	Description: Major component total operational time
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_hourCounter(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_hourCounter(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_hourCounter) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_hourCounter_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_hourCounter
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_operationalTime related method
 *	Description: Controller total operational time
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_operationalTime(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_operationalTime(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_operationalTime) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_operationalTime_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_operationalTime
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_supplyCurrent related method
 *	Description: Controller device supply current
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_supplyCurrent(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_supplyCurrent(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_supplyCurrent) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_supplyCurrent_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_supplyCurrent
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_supplyVoltage related method
 *	Description: Controller device supply voltage
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_supplyVoltage(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_supplyVoltage(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_supplyVoltage) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_supplyVoltage_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_supplyVoltage
}
//--------------------------------------------------------
/**
 *	Read attribute rxpu_temperature related method
 *	Description: Controller device temperature
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxpu_temperature(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxpu_temperature(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxpu_temperature) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxpu_temperature_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxpu_temperature
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_adcPower related method
 *	Description: Averaged power in dBm
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_adcPower(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_adcPower(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_adcPower) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_adcPower_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_adcPower
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_adcVariance related method
 *	Description: Sample variance
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_adcVariance(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_adcVariance(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_adcVariance) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_adcVariance_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_adcVariance
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_expectedOnline related method
 *	Description: Indicates whether major component is expected online.  mcHealthStatus 
 *               will be normal if this value is set to false and the device is not installed or offline.
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_expectedOnline(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_expectedOnline(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_expectedOnline) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_expectedOnline_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_expectedOnline
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_healthState related method
 *	Description: Major component health status
 *
 *	Data type:	Tango::DevEnum (rxs123_healthStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_healthState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_healthState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_healthState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_healthState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_healthState
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_hourCounter related method
 *	Description: Operational run time in hours
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_hourCounter(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_hourCounter(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_hourCounter) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_hourCounter_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_hourCounter
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_operationalTime related method
 *	Description: Major component total operational time
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_operationalTime(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_operationalTime(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_operationalTime) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_operationalTime_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_operationalTime
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_supplyCurrent related method
 *	Description: Major component supply current
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_supplyCurrent(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_supplyCurrent(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_supplyCurrent) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_supplyCurrent_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_supplyCurrent
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_supplyVoltage related method
 *	Description: Major component supply voltage
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_supplyVoltage(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_supplyVoltage(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_supplyVoltage) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_supplyVoltage_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_supplyVoltage
}
//--------------------------------------------------------
/**
 *	Read attribute rxs123_temperature related method
 *	Description: Major component temperature
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs123_temperature(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs123_temperature(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs123_temperature) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs123_temperature_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs123_temperature
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_adcPower related method
 *	Description: Averaged power in dBm
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_adcPower(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_adcPower(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_adcPower) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_adcPower_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_adcPower
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_adcVariance related method
 *	Description: Sample variance
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_adcVariance(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_adcVariance(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_adcVariance) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_adcVariance_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_adcVariance
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_expectedOnline related method
 *	Description: Indicates whether major component is expected online.  mcHealthStatus will be normal 
 *               if this value is set to false and the device is not installed or offline.
 *
 *	Data type:	Tango::DevShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_expectedOnline(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_expectedOnline(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_expectedOnline) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_expectedOnline_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_expectedOnline
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_healthState related method
 *	Description: Major component health status
 *
 *	Data type:	Tango::DevEnum (rxs45_healthStateEnum)
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_healthState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_healthState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_healthState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_healthState_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_healthState
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_hourCounter related method
 *	Description: Operational run time in hours
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_hourCounter(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_hourCounter(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_hourCounter) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_hourCounter_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_hourCounter
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_supplyCurrent related method
 *	Description: Major component supply current
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_supplyCurrent(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_supplyCurrent(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_supplyCurrent) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_supplyCurrent_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_supplyCurrent
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_supplyVoltage related method
 *	Description: Major component supply voltage
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_supplyVoltage(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_supplyVoltage(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_supplyVoltage) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_supplyVoltage_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_supplyVoltage
}
//--------------------------------------------------------
/**
 *	Read attribute rxs45_temperature related method
 *	Description: Device temperature
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void RxEmulator::read_rxs45_temperature(Tango::Attribute &attr)
{
	DEBUG_STREAM << "RxEmulator::read_rxs45_temperature(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(RxEmulator::read_rxs45_temperature) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_rxs45_temperature_read);
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::read_rxs45_temperature
}

//--------------------------------------------------------
/**
 *	Method      : RxEmulator::add_dynamic_attributes()
 *	Description : Create the dynamic attributes if any
 *                for specified device.
 */
//--------------------------------------------------------
void RxEmulator::add_dynamic_attributes()
{
	/*----- PROTECTED REGION ID(RxEmulator::add_dynamic_attributes) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic attributes if any
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::add_dynamic_attributes
}

//--------------------------------------------------------
/**
 *	Command Capture related method
 *	Description: Start/stop capture on the configured band.
 *               Command only valid in Data_Capture mode
 *
 *	@param argin Flag value start/stop (0/1)
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: error/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::capture(Tango::DevShort argin)
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::Capture()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::capture) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::capture
	return argout;
}
//--------------------------------------------------------
/**
 *	Command ConfigureBand related method
 *	Description: Configure band to get ready for Data_Capture.
 *               Not a valid command in Standby_LP mode.
 *
 *	@param argin Band id
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: err/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::configure_band(Tango::DevShort argin)
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::ConfigureBand()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::configure_band) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::configure_band
	return argout;
}
//--------------------------------------------------------
/**
 *	Command SetEngineeringInterface related method
 *	Description: Request the device to enter engineering interface mode
 *
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: error/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::set_engineering_interface()
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::SetEngineeringInterface()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::set_engineering_interface) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::set_engineering_interface
	return argout;
}
//--------------------------------------------------------
/**
 *	Command SetExpectedOnline related method
 *	Description: Configure whether a major component is 
 *               expected online. The mcHealthStatus attribute will be 
 *               normal if this value is set to false and the device is 
 *               not installed or offline.
 *
 *	@param argin [0]: Major component enum (RXS123,RXS45,RXC)
 *               [1]: Flag value enable/disable (0/1)
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: error/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::set_expected_online(const Tango::DevVarShortArray *argin)
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::SetExpectedOnline()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::set_expected_online) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::set_expected_online
	return argout;
}
//--------------------------------------------------------
/**
 *	Command SetSubElementMode related method
 *	Description: Set the sub-element mode.
 *               Allowed set modes are: 
 *               
 *               Data_Capture
 *               Standby_FP 
 *               Standby_LP 
 *               Maintenance
 *
 *	@param argin Operational mode
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: err/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::set_sub_element_mode(Tango::DevEnum argin)
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::SetSubElementMode()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::set_sub_element_mode) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::set_sub_element_mode
	return argout;
}
//--------------------------------------------------------
/**
 *	Command SetNoiseSource related method
 *	Description: Set the noise diode start time, period and on/off time 
 *               (duty cycle)
 *
 *	@param argin [0]: Start time of a new noise source
 *               [1]: Noise source period (Duty cycle: time fraction in [0,1] in which the 
 *               noise diode is turned on)
 *               [2]: Noise source on time (Overall period of a on/off cycle in seconds)
 *               [3]: Noise source off time
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: error/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::set_noise_source(const Tango::DevVarLongArray *argin)
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::SetNoiseSource()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::set_noise_source) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::set_noise_source
	return argout;
}
//--------------------------------------------------------
/**
 *	Command Synchronise related method
 *	Description: Reset configured band sample counters.
 *               Command only valid in Data_Capture mode.
 *               
 *               NB: Run over the selected band only
 *
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: err/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::synchronise()
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::Synchronise()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::synchronise) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::synchronise
	return argout;
}
//--------------------------------------------------------
/**
 *	Command SetAttenuation related method
 *	Description: Sets the global attenuation.  Changing this value will 
 *               set the attenuation across the system and will be 
 *               applied to all bands.
 *
 *	@param argin Attenuation value
 *	@returns Long arg
 *           [0]: ack code
 *           
 *           String arg
 *           [0]: Err/info description
 */
//--------------------------------------------------------
Tango::DevVarLongStringArray *RxEmulator::set_attenuation(Tango::DevLong argin)
{
	Tango::DevVarLongStringArray *argout;
	DEBUG_STREAM << "RxEmulator::SetAttenuation()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(RxEmulator::set_attenuation) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::set_attenuation
	return argout;
}
//--------------------------------------------------------
/**
 *	Method      : RxEmulator::add_dynamic_commands()
 *	Description : Create the dynamic commands if any
 *                for specified device.
 */
//--------------------------------------------------------
void RxEmulator::add_dynamic_commands()
{
	/*----- PROTECTED REGION ID(RxEmulator::add_dynamic_commands) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic commands if any
	
	/*----- PROTECTED REGION END -----*/	//	RxEmulator::add_dynamic_commands
}

/*----- PROTECTED REGION ID(RxEmulator::namespace_ending) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	RxEmulator::namespace_ending
} //	namespace
