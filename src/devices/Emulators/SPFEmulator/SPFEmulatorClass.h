/*----- PROTECTED REGION ID(SPFEmulatorClass.h) ENABLED START -----*/
//=============================================================================
//
// file :        SPFEmulatorClass.h
//
// description : Include for the SPFEmulator root class.
//               This class is the singleton class for
//                the SPFEmulator device class.
//               It contains all properties and methods which the 
//               SPFEmulator requires only once e.g. the commands.
//
// project :     SPFEmulator
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef SPFEmulatorClass_H
#define SPFEmulatorClass_H

#include <tango.h>
#include <SEEmulatorBaseClass.h>
#include <SPFEmulator.h>


/*----- PROTECTED REGION END -----*/	//	SPFEmulatorClass.h


namespace SPFEmulator_ns
{
/*----- PROTECTED REGION ID(SPFEmulatorClass::classes for dynamic creation) ENABLED START -----*/


/*----- PROTECTED REGION END -----*/	//	SPFEmulatorClass::classes for dynamic creation

//=========================================
//	Define classes for attributes
//=========================================
//	Attribute spf_mode class definition
class spf_modeAttrib: public Tango::Attr
{
public:
	spf_modeAttrib():Attr("spf_mode",
			Tango::DEV_ENUM, Tango::READ) {};
	~spf_modeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spf_mode(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spf_mode_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(spf_modeEnum) == in_type;}
	virtual string get_enum_type() {return string("spf_modeEnum");}
};

//	Attribute spf_powerState class definition
class spf_powerStateAttrib: public Tango::Attr
{
public:
	spf_powerStateAttrib():Attr("spf_powerState",
			Tango::DEV_ENUM, Tango::READ) {};
	~spf_powerStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spf_powerState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spf_powerState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(spf_powerStateEnum) == in_type;}
	virtual string get_enum_type() {return string("spf_powerStateEnum");}
};

//	Attribute b1_capabilityState class definition
class b1_capabilityStateAttrib: public Tango::Attr
{
public:
	b1_capabilityStateAttrib():Attr("b1_capabilityState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b1_capabilityStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_capabilityState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_capabilityState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b1_capabilityStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b1_capabilityStateEnum");}
};

//	Attribute b2_capabilityState class definition
class b2_capabilityStateAttrib: public Tango::Attr
{
public:
	b2_capabilityStateAttrib():Attr("b2_capabilityState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b2_capabilityStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_capabilityState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_capabilityState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b2_capabilityStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b2_capabilityStateEnum");}
};

//	Attribute b3_capabilityState class definition
class b3_capabilityStateAttrib: public Tango::Attr
{
public:
	b3_capabilityStateAttrib():Attr("b3_capabilityState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b3_capabilityStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_capabilityState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_capabilityState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b3_capabilityStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b3_capabilityStateEnum");}
};

//	Attribute b4_capabilityState class definition
class b4_capabilityStateAttrib: public Tango::Attr
{
public:
	b4_capabilityStateAttrib():Attr("b4_capabilityState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b4_capabilityStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_capabilityState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_capabilityState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b4_capabilityStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b4_capabilityStateEnum");}
};

//	Attribute b5_capabilityState class definition
class b5_capabilityStateAttrib: public Tango::Attr
{
public:
	b5_capabilityStateAttrib():Attr("b5_capabilityState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b5_capabilityStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_capabilityState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_capabilityState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b5_capabilityStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b5_capabilityStateEnum");}
};

//	Attribute b1_captime2opFull class definition
class b1_captime2opFullAttrib: public Tango::Attr
{
public:
	b1_captime2opFullAttrib():Attr("b1_captime2opFull",
			Tango::DEV_LONG, Tango::READ) {};
	~b1_captime2opFullAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_captime2opFull(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_captime2opFull_allowed(ty);}
};

//	Attribute b2_captime2opFull class definition
class b2_captime2opFullAttrib: public Tango::Attr
{
public:
	b2_captime2opFullAttrib():Attr("b2_captime2opFull",
			Tango::DEV_LONG, Tango::READ) {};
	~b2_captime2opFullAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_captime2opFull(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_captime2opFull_allowed(ty);}
};

//	Attribute b3_captime2opFull class definition
class b3_captime2opFullAttrib: public Tango::Attr
{
public:
	b3_captime2opFullAttrib():Attr("b3_captime2opFull",
			Tango::DEV_LONG, Tango::READ) {};
	~b3_captime2opFullAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_captime2opFull(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_captime2opFull_allowed(ty);}
};

//	Attribute b4_captime2opFull class definition
class b4_captime2opFullAttrib: public Tango::Attr
{
public:
	b4_captime2opFullAttrib():Attr("b4_captime2opFull",
			Tango::DEV_LONG, Tango::READ) {};
	~b4_captime2opFullAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_captime2opFull(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_captime2opFull_allowed(ty);}
};

//	Attribute b5_captime2opFull class definition
class b5_captime2opFullAttrib: public Tango::Attr
{
public:
	b5_captime2opFullAttrib():Attr("b5_captime2opFull",
			Tango::DEV_LONG, Tango::READ) {};
	~b5_captime2opFullAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_captime2opFull(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_captime2opFull_allowed(ty);}
};

//	Attribute spf_healthState class definition
class spf_healthStateAttrib: public Tango::Attr
{
public:
	spf_healthStateAttrib():Attr("spf_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~spf_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spf_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spf_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(spf_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("spf_healthStateEnum");}
};

//	Attribute b1_healthState class definition
class b1_healthStateAttrib: public Tango::Attr
{
public:
	b1_healthStateAttrib():Attr("b1_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b1_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b1_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b1_healthStateEnum");}
};

//	Attribute b2_healthState class definition
class b2_healthStateAttrib: public Tango::Attr
{
public:
	b2_healthStateAttrib():Attr("b2_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b2_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b2_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b2_healthStateEnum");}
};

//	Attribute b3_healthState class definition
class b3_healthStateAttrib: public Tango::Attr
{
public:
	b3_healthStateAttrib():Attr("b3_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b3_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b3_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b3_healthStateEnum");}
};

//	Attribute b4_healthState class definition
class b4_healthStateAttrib: public Tango::Attr
{
public:
	b4_healthStateAttrib():Attr("b4_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b4_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b4_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b4_healthStateEnum");}
};

//	Attribute b5_healthState class definition
class b5_healthStateAttrib: public Tango::Attr
{
public:
	b5_healthStateAttrib():Attr("b5_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~b5_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(b5_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("b5_healthStateEnum");}
};

//	Attribute he_healthState class definition
class he_healthStateAttrib: public Tango::Attr
{
public:
	he_healthStateAttrib():Attr("he_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~he_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_he_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_he_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(he_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("he_healthStateEnum");}
};

//	Attribute va_healthState class definition
class va_healthStateAttrib: public Tango::Attr
{
public:
	va_healthStateAttrib():Attr("va_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~va_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_va_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_va_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(va_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("va_healthStateEnum");}
};

//	Attribute spfc_healthState class definition
class spfc_healthStateAttrib: public Tango::Attr
{
public:
	spfc_healthStateAttrib():Attr("spfc_healthState",
			Tango::DEV_ENUM, Tango::READ) {};
	~spfc_healthStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_healthState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_healthState_allowed(ty);}
	virtual bool same_type(const type_info &in_type) {return typeid(spfc_healthStateEnum) == in_type;}
	virtual string get_enum_type() {return string("spfc_healthStateEnum");}
};

//	Attribute b1_operationalTime class definition
class b1_operationalTimeAttrib: public Tango::Attr
{
public:
	b1_operationalTimeAttrib():Attr("b1_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~b1_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_operationalTime_allowed(ty);}
};

//	Attribute b2_operationalTime class definition
class b2_operationalTimeAttrib: public Tango::Attr
{
public:
	b2_operationalTimeAttrib():Attr("b2_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~b2_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_operationalTime_allowed(ty);}
};

//	Attribute b3_operationalTime class definition
class b3_operationalTimeAttrib: public Tango::Attr
{
public:
	b3_operationalTimeAttrib():Attr("b3_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~b3_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_operationalTime_allowed(ty);}
};

//	Attribute b4_operationalTime class definition
class b4_operationalTimeAttrib: public Tango::Attr
{
public:
	b4_operationalTimeAttrib():Attr("b4_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~b4_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_operationalTime_allowed(ty);}
};

//	Attribute b5_operationalTime class definition
class b5_operationalTimeAttrib: public Tango::Attr
{
public:
	b5_operationalTimeAttrib():Attr("b5_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~b5_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_operationalTime_allowed(ty);}
};

//	Attribute he_operationalTime class definition
class he_operationalTimeAttrib: public Tango::Attr
{
public:
	he_operationalTimeAttrib():Attr("he_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~he_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_he_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_he_operationalTime_allowed(ty);}
};

//	Attribute va_operationalTime class definition
class va_operationalTimeAttrib: public Tango::Attr
{
public:
	va_operationalTimeAttrib():Attr("va_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~va_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_va_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_va_operationalTime_allowed(ty);}
};

//	Attribute spfc_operationalTime class definition
class spfc_operationalTimeAttrib: public Tango::Attr
{
public:
	spfc_operationalTimeAttrib():Attr("spfc_operationalTime",
			Tango::DEV_LONG, Tango::READ) {};
	~spfc_operationalTimeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_operationalTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_operationalTime_allowed(ty);}
};

//	Attribute b1_hourCounter class definition
class b1_hourCounterAttrib: public Tango::Attr
{
public:
	b1_hourCounterAttrib():Attr("b1_hourCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~b1_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_hourCounter_allowed(ty);}
};

//	Attribute b2_hourCounter class definition
class b2_hourCounterAttrib: public Tango::Attr
{
public:
	b2_hourCounterAttrib():Attr("b2_hourCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~b2_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_hourCounter_allowed(ty);}
};

//	Attribute b3_hourCounter class definition
class b3_hourCounterAttrib: public Tango::Attr
{
public:
	b3_hourCounterAttrib():Attr("b3_hourCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~b3_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_hourCounter_allowed(ty);}
};

//	Attribute b4_hourCounter class definition
class b4_hourCounterAttrib: public Tango::Attr
{
public:
	b4_hourCounterAttrib():Attr("b4_hourCounter",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b4_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_hourCounter_allowed(ty);}
};

//	Attribute b5_hourCounter class definition
class b5_hourCounterAttrib: public Tango::Attr
{
public:
	b5_hourCounterAttrib():Attr("b5_hourCounter",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b5_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_hourCounter_allowed(ty);}
};

//	Attribute he_hourCounter class definition
class he_hourCounterAttrib: public Tango::Attr
{
public:
	he_hourCounterAttrib():Attr("he_hourCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~he_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_he_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_he_hourCounter_allowed(ty);}
};

//	Attribute va_hourCounter class definition
class va_hourCounterAttrib: public Tango::Attr
{
public:
	va_hourCounterAttrib():Attr("va_hourCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~va_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_va_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_va_hourCounter_allowed(ty);}
};

//	Attribute spfc_hourCounter class definition
class spfc_hourCounterAttrib: public Tango::Attr
{
public:
	spfc_hourCounterAttrib():Attr("spfc_hourCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~spfc_hourCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_hourCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_hourCounter_allowed(ty);}
};

//	Attribute b1_expectedOnline class definition
class b1_expectedOnlineAttrib: public Tango::Attr
{
public:
	b1_expectedOnlineAttrib():Attr("b1_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~b1_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_expectedOnline_allowed(ty);}
};

//	Attribute b2_expectedOnline class definition
class b2_expectedOnlineAttrib: public Tango::Attr
{
public:
	b2_expectedOnlineAttrib():Attr("b2_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~b2_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_expectedOnline_allowed(ty);}
};

//	Attribute b3_expectedOnline class definition
class b3_expectedOnlineAttrib: public Tango::Attr
{
public:
	b3_expectedOnlineAttrib():Attr("b3_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~b3_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_expectedOnline_allowed(ty);}
};

//	Attribute b4_expectedOnline class definition
class b4_expectedOnlineAttrib: public Tango::Attr
{
public:
	b4_expectedOnlineAttrib():Attr("b4_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~b4_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_expectedOnline_allowed(ty);}
};

//	Attribute b5_expectedOnline class definition
class b5_expectedOnlineAttrib: public Tango::Attr
{
public:
	b5_expectedOnlineAttrib():Attr("b5_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~b5_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_expectedOnline_allowed(ty);}
};

//	Attribute he_expectedOnline class definition
class he_expectedOnlineAttrib: public Tango::Attr
{
public:
	he_expectedOnlineAttrib():Attr("he_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~he_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_he_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_he_expectedOnline_allowed(ty);}
};

//	Attribute va_expectedOnline class definition
class va_expectedOnlineAttrib: public Tango::Attr
{
public:
	va_expectedOnlineAttrib():Attr("va_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~va_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_va_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_va_expectedOnline_allowed(ty);}
};

//	Attribute spfc_expectedOnline class definition
class spfc_expectedOnlineAttrib: public Tango::Attr
{
public:
	spfc_expectedOnlineAttrib():Attr("spfc_expectedOnline",
			Tango::DEV_SHORT, Tango::READ) {};
	~spfc_expectedOnlineAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_expectedOnline(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_expectedOnline_allowed(ty);}
};

//	Attribute spfc_supplyVoltage class definition
class spfc_supplyVoltageAttrib: public Tango::Attr
{
public:
	spfc_supplyVoltageAttrib():Attr("spfc_supplyVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~spfc_supplyVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_supplyVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_supplyVoltage_allowed(ty);}
};

//	Attribute spfc_supplyCurrent class definition
class spfc_supplyCurrentAttrib: public Tango::Attr
{
public:
	spfc_supplyCurrentAttrib():Attr("spfc_supplyCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~spfc_supplyCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_supplyCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_supplyCurrent_allowed(ty);}
};

//	Attribute spfc_temperature class definition
class spfc_temperatureAttrib: public Tango::Attr
{
public:
	spfc_temperatureAttrib():Attr("spfc_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~spfc_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_spfc_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_spfc_temperature_allowed(ty);}
};

//	Attribute he_comp_supplyPressure class definition
class he_comp_supplyPressureAttrib: public Tango::Attr
{
public:
	he_comp_supplyPressureAttrib():Attr("he_comp_supplyPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~he_comp_supplyPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_he_comp_supplyPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_he_comp_supplyPressure_allowed(ty);}
};

//	Attribute he_comp_returnPressure class definition
class he_comp_returnPressureAttrib: public Tango::Attr
{
public:
	he_comp_returnPressureAttrib():Attr("he_comp_returnPressure",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~he_comp_returnPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_he_comp_returnPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_he_comp_returnPressure_allowed(ty);}
};

//	Attribute b1_lna_h_drainVoltage class definition
class b1_lna_h_drainVoltageAttrib: public Tango::Attr
{
public:
	b1_lna_h_drainVoltageAttrib():Attr("b1_lna_h_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_lna_h_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_h_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_h_drainVoltage_allowed(ty);}
};

//	Attribute b2_lna_h_drainVoltage class definition
class b2_lna_h_drainVoltageAttrib: public Tango::Attr
{
public:
	b2_lna_h_drainVoltageAttrib():Attr("b2_lna_h_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_lna_h_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_h_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_h_drainVoltage_allowed(ty);}
};

//	Attribute b3_lna_h_drainVoltage class definition
class b3_lna_h_drainVoltageAttrib: public Tango::Attr
{
public:
	b3_lna_h_drainVoltageAttrib():Attr("b3_lna_h_drainVoltage",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b3_lna_h_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_h_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_h_drainVoltage_allowed(ty);}
};

//	Attribute b4_lna_h_drainVoltage class definition
class b4_lna_h_drainVoltageAttrib: public Tango::Attr
{
public:
	b4_lna_h_drainVoltageAttrib():Attr("b4_lna_h_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_lna_h_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_h_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_h_drainVoltage_allowed(ty);}
};

//	Attribute b5_lna_h_drainVoltage class definition
class b5_lna_h_drainVoltageAttrib: public Tango::Attr
{
public:
	b5_lna_h_drainVoltageAttrib():Attr("b5_lna_h_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_lna_h_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_h_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_h_drainVoltage_allowed(ty);}
};

//	Attribute b1_lna_h_gateVoltage class definition
class b1_lna_h_gateVoltageAttrib: public Tango::Attr
{
public:
	b1_lna_h_gateVoltageAttrib():Attr("b1_lna_h_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_lna_h_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_h_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_h_gateVoltage_allowed(ty);}
};

//	Attribute b2_lna_h_gateVoltage class definition
class b2_lna_h_gateVoltageAttrib: public Tango::Attr
{
public:
	b2_lna_h_gateVoltageAttrib():Attr("b2_lna_h_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_lna_h_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_h_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_h_gateVoltage_allowed(ty);}
};

//	Attribute b3_lna_h_gateVoltage class definition
class b3_lna_h_gateVoltageAttrib: public Tango::Attr
{
public:
	b3_lna_h_gateVoltageAttrib():Attr("b3_lna_h_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_lna_h_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_h_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_h_gateVoltage_allowed(ty);}
};

//	Attribute b4_lna_h_gateVoltage class definition
class b4_lna_h_gateVoltageAttrib: public Tango::Attr
{
public:
	b4_lna_h_gateVoltageAttrib():Attr("b4_lna_h_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_lna_h_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_h_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_h_gateVoltage_allowed(ty);}
};

//	Attribute b5_lna_h_gateVoltage class definition
class b5_lna_h_gateVoltageAttrib: public Tango::Attr
{
public:
	b5_lna_h_gateVoltageAttrib():Attr("b5_lna_h_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_lna_h_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_h_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_h_gateVoltage_allowed(ty);}
};

//	Attribute b1_lna_h_drainCurrent class definition
class b1_lna_h_drainCurrentAttrib: public Tango::Attr
{
public:
	b1_lna_h_drainCurrentAttrib():Attr("b1_lna_h_drainCurrent",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b1_lna_h_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_h_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_h_drainCurrent_allowed(ty);}
};

//	Attribute b2_lna_h_drainCurrent class definition
class b2_lna_h_drainCurrentAttrib: public Tango::Attr
{
public:
	b2_lna_h_drainCurrentAttrib():Attr("b2_lna_h_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_lna_h_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_h_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_h_drainCurrent_allowed(ty);}
};

//	Attribute b3_lna_h_drainCurrent class definition
class b3_lna_h_drainCurrentAttrib: public Tango::Attr
{
public:
	b3_lna_h_drainCurrentAttrib():Attr("b3_lna_h_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_lna_h_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_h_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_h_drainCurrent_allowed(ty);}
};

//	Attribute b4_lna_h_drainCurrent class definition
class b4_lna_h_drainCurrentAttrib: public Tango::Attr
{
public:
	b4_lna_h_drainCurrentAttrib():Attr("b4_lna_h_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_lna_h_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_h_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_h_drainCurrent_allowed(ty);}
};

//	Attribute b5_lna_h_drainCurrent class definition
class b5_lna_h_drainCurrentAttrib: public Tango::Attr
{
public:
	b5_lna_h_drainCurrentAttrib():Attr("b5_lna_h_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_lna_h_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_h_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_h_drainCurrent_allowed(ty);}
};

//	Attribute b1_lna_v_drainVoltage class definition
class b1_lna_v_drainVoltageAttrib: public Tango::Attr
{
public:
	b1_lna_v_drainVoltageAttrib():Attr("b1_lna_v_drainVoltage",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b1_lna_v_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_v_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_v_drainVoltage_allowed(ty);}
};

//	Attribute b2_lna_v_drainVoltage class definition
class b2_lna_v_drainVoltageAttrib: public Tango::Attr
{
public:
	b2_lna_v_drainVoltageAttrib():Attr("b2_lna_v_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_lna_v_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_v_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_v_drainVoltage_allowed(ty);}
};

//	Attribute b3_lna_v_drainVoltage class definition
class b3_lna_v_drainVoltageAttrib: public Tango::Attr
{
public:
	b3_lna_v_drainVoltageAttrib():Attr("b3_lna_v_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_lna_v_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_v_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_v_drainVoltage_allowed(ty);}
};

//	Attribute b4_lna_v_drainVoltage class definition
class b4_lna_v_drainVoltageAttrib: public Tango::Attr
{
public:
	b4_lna_v_drainVoltageAttrib():Attr("b4_lna_v_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_lna_v_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_v_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_v_drainVoltage_allowed(ty);}
};

//	Attribute b5_lna_v_drainVoltage class definition
class b5_lna_v_drainVoltageAttrib: public Tango::Attr
{
public:
	b5_lna_v_drainVoltageAttrib():Attr("b5_lna_v_drainVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_lna_v_drainVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_v_drainVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_v_drainVoltage_allowed(ty);}
};

//	Attribute b1_lna_v_gateVoltage class definition
class b1_lna_v_gateVoltageAttrib: public Tango::Attr
{
public:
	b1_lna_v_gateVoltageAttrib():Attr("b1_lna_v_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_lna_v_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_v_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_v_gateVoltage_allowed(ty);}
};

//	Attribute b2_lna_v_gateVoltage class definition
class b2_lna_v_gateVoltageAttrib: public Tango::Attr
{
public:
	b2_lna_v_gateVoltageAttrib():Attr("b2_lna_v_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_lna_v_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_v_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_v_gateVoltage_allowed(ty);}
};

//	Attribute b3_lna_v_gateVoltage class definition
class b3_lna_v_gateVoltageAttrib: public Tango::Attr
{
public:
	b3_lna_v_gateVoltageAttrib():Attr("b3_lna_v_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_lna_v_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_v_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_v_gateVoltage_allowed(ty);}
};

//	Attribute b4_lna_v_gateVoltage class definition
class b4_lna_v_gateVoltageAttrib: public Tango::Attr
{
public:
	b4_lna_v_gateVoltageAttrib():Attr("b4_lna_v_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_lna_v_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_v_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_v_gateVoltage_allowed(ty);}
};

//	Attribute b5_lna_v_gateVoltage class definition
class b5_lna_v_gateVoltageAttrib: public Tango::Attr
{
public:
	b5_lna_v_gateVoltageAttrib():Attr("b5_lna_v_gateVoltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_lna_v_gateVoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_v_gateVoltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_v_gateVoltage_allowed(ty);}
};

//	Attribute b1_lna_v_drainCurrent class definition
class b1_lna_v_drainCurrentAttrib: public Tango::Attr
{
public:
	b1_lna_v_drainCurrentAttrib():Attr("b1_lna_v_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_lna_v_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_v_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_v_drainCurrent_allowed(ty);}
};

//	Attribute b2_lna_v_drainCurrent class definition
class b2_lna_v_drainCurrentAttrib: public Tango::Attr
{
public:
	b2_lna_v_drainCurrentAttrib():Attr("b2_lna_v_drainCurrent",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b2_lna_v_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_v_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_v_drainCurrent_allowed(ty);}
};

//	Attribute b3_lna_v_drainCurrent class definition
class b3_lna_v_drainCurrentAttrib: public Tango::Attr
{
public:
	b3_lna_v_drainCurrentAttrib():Attr("b3_lna_v_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_lna_v_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_v_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_v_drainCurrent_allowed(ty);}
};

//	Attribute b4_lna_v_drainCurrent class definition
class b4_lna_v_drainCurrentAttrib: public Tango::Attr
{
public:
	b4_lna_v_drainCurrentAttrib():Attr("b4_lna_v_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_lna_v_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_v_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_v_drainCurrent_allowed(ty);}
};

//	Attribute b5_lna_v_drainCurrent class definition
class b5_lna_v_drainCurrentAttrib: public Tango::Attr
{
public:
	b5_lna_v_drainCurrentAttrib():Attr("b5_lna_v_drainCurrent",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_lna_v_drainCurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_v_drainCurrent(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_v_drainCurrent_allowed(ty);}
};

//	Attribute b1_amp2_h_Current class definition
class b1_amp2_h_CurrentAttrib: public Tango::Attr
{
public:
	b1_amp2_h_CurrentAttrib():Attr("b1_amp2_h_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_amp2_h_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_amp2_h_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_amp2_h_Current_allowed(ty);}
};

//	Attribute b2_amp2_h_Current class definition
class b2_amp2_h_CurrentAttrib: public Tango::Attr
{
public:
	b2_amp2_h_CurrentAttrib():Attr("b2_amp2_h_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_amp2_h_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_amp2_h_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_amp2_h_Current_allowed(ty);}
};

//	Attribute b3_amp2_h_Current class definition
class b3_amp2_h_CurrentAttrib: public Tango::Attr
{
public:
	b3_amp2_h_CurrentAttrib():Attr("b3_amp2_h_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_amp2_h_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_amp2_h_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_amp2_h_Current_allowed(ty);}
};

//	Attribute b4_amp2_h_Current class definition
class b4_amp2_h_CurrentAttrib: public Tango::Attr
{
public:
	b4_amp2_h_CurrentAttrib():Attr("b4_amp2_h_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_amp2_h_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_amp2_h_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_amp2_h_Current_allowed(ty);}
};

//	Attribute b5_amp2_h_Current class definition
class b5_amp2_h_CurrentAttrib: public Tango::Attr
{
public:
	b5_amp2_h_CurrentAttrib():Attr("b5_amp2_h_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_amp2_h_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_amp2_h_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_amp2_h_Current_allowed(ty);}
};

//	Attribute b1_amp2_v_Current class definition
class b1_amp2_v_CurrentAttrib: public Tango::Attr
{
public:
	b1_amp2_v_CurrentAttrib():Attr("b1_amp2_v_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_amp2_v_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_amp2_v_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_amp2_v_Current_allowed(ty);}
};

//	Attribute b2_amp2_v_Current class definition
class b2_amp2_v_CurrentAttrib: public Tango::Attr
{
public:
	b2_amp2_v_CurrentAttrib():Attr("b2_amp2_v_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_amp2_v_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_amp2_v_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_amp2_v_Current_allowed(ty);}
};

//	Attribute b3_amp2_v_Current class definition
class b3_amp2_v_CurrentAttrib: public Tango::Attr
{
public:
	b3_amp2_v_CurrentAttrib():Attr("b3_amp2_v_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_amp2_v_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_amp2_v_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_amp2_v_Current_allowed(ty);}
};

//	Attribute b4_amp2_v_Current class definition
class b4_amp2_v_CurrentAttrib: public Tango::Attr
{
public:
	b4_amp2_v_CurrentAttrib():Attr("b4_amp2_v_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_amp2_v_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_amp2_v_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_amp2_v_Current_allowed(ty);}
};

//	Attribute b5_amp2_v_Current class definition
class b5_amp2_v_CurrentAttrib: public Tango::Attr
{
public:
	b5_amp2_v_CurrentAttrib():Attr("b5_amp2_v_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_amp2_v_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_amp2_v_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_amp2_v_Current_allowed(ty);}
};

//	Attribute b1_cs_Current class definition
class b1_cs_CurrentAttrib: public Tango::Attr
{
public:
	b1_cs_CurrentAttrib():Attr("b1_cs_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_cs_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_cs_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_cs_Current_allowed(ty);}
};

//	Attribute b2_cs_Current class definition
class b2_cs_CurrentAttrib: public Tango::Attr
{
public:
	b2_cs_CurrentAttrib():Attr("b2_cs_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_cs_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_cs_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_cs_Current_allowed(ty);}
};

//	Attribute b3_cs_Current class definition
class b3_cs_CurrentAttrib: public Tango::Attr
{
public:
	b3_cs_CurrentAttrib():Attr("b3_cs_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_cs_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_cs_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_cs_Current_allowed(ty);}
};

//	Attribute b4_cs_Current class definition
class b4_cs_CurrentAttrib: public Tango::Attr
{
public:
	b4_cs_CurrentAttrib():Attr("b4_cs_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_cs_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_cs_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_cs_Current_allowed(ty);}
};

//	Attribute b5_cs_Current class definition
class b5_cs_CurrentAttrib: public Tango::Attr
{
public:
	b5_cs_CurrentAttrib():Attr("b5_cs_Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_cs_CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_cs_Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_cs_Current_allowed(ty);}
};

//	Attribute b1_cs_Voltage class definition
class b1_cs_VoltageAttrib: public Tango::Attr
{
public:
	b1_cs_VoltageAttrib():Attr("b1_cs_Voltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_cs_VoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_cs_Voltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_cs_Voltage_allowed(ty);}
};

//	Attribute b2_cs_Voltage class definition
class b2_cs_VoltageAttrib: public Tango::Attr
{
public:
	b2_cs_VoltageAttrib():Attr("b2_cs_Voltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_cs_VoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_cs_Voltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_cs_Voltage_allowed(ty);}
};

//	Attribute b3_cs_Voltage class definition
class b3_cs_VoltageAttrib: public Tango::Attr
{
public:
	b3_cs_VoltageAttrib():Attr("b3_cs_Voltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_cs_VoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_cs_Voltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_cs_Voltage_allowed(ty);}
};

//	Attribute b4_cs_Voltage class definition
class b4_cs_VoltageAttrib: public Tango::Attr
{
public:
	b4_cs_VoltageAttrib():Attr("b4_cs_Voltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_cs_VoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_cs_Voltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_cs_Voltage_allowed(ty);}
};

//	Attribute b5_cs_Voltage class definition
class b5_cs_VoltageAttrib: public Tango::Attr
{
public:
	b5_cs_VoltageAttrib():Attr("b5_cs_Voltage",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_cs_VoltageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_cs_Voltage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_cs_Voltage_allowed(ty);}
};

//	Attribute b1_rfe1_heater1Current class definition
class b1_rfe1_heater1CurrentAttrib: public Tango::Attr
{
public:
	b1_rfe1_heater1CurrentAttrib():Attr("b1_rfe1_heater1Current",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b1_rfe1_heater1CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_rfe1_heater1Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_rfe1_heater1Current_allowed(ty);}
};

//	Attribute b2_rfe1_heater1Current class definition
class b2_rfe1_heater1CurrentAttrib: public Tango::Attr
{
public:
	b2_rfe1_heater1CurrentAttrib():Attr("b2_rfe1_heater1Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_rfe1_heater1CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_rfe1_heater1Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_rfe1_heater1Current_allowed(ty);}
};

//	Attribute b3_rfe1_heater1Current class definition
class b3_rfe1_heater1CurrentAttrib: public Tango::Attr
{
public:
	b3_rfe1_heater1CurrentAttrib():Attr("b3_rfe1_heater1Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_rfe1_heater1CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_rfe1_heater1Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_rfe1_heater1Current_allowed(ty);}
};

//	Attribute b4_rfe1_heater1Current class definition
class b4_rfe1_heater1CurrentAttrib: public Tango::Attr
{
public:
	b4_rfe1_heater1CurrentAttrib():Attr("b4_rfe1_heater1Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_rfe1_heater1CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_rfe1_heater1Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_rfe1_heater1Current_allowed(ty);}
};

//	Attribute b5_rfe1_heater1Current class definition
class b5_rfe1_heater1CurrentAttrib: public Tango::Attr
{
public:
	b5_rfe1_heater1CurrentAttrib():Attr("b5_rfe1_heater1Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_rfe1_heater1CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_rfe1_heater1Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_rfe1_heater1Current_allowed(ty);}
};

//	Attribute b1_rfe1_heater2Current class definition
class b1_rfe1_heater2CurrentAttrib: public Tango::Attr
{
public:
	b1_rfe1_heater2CurrentAttrib():Attr("b1_rfe1_heater2Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_rfe1_heater2CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_rfe1_heater2Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_rfe1_heater2Current_allowed(ty);}
};

//	Attribute b2_rfe1_heater2Current class definition
class b2_rfe1_heater2CurrentAttrib: public Tango::Attr
{
public:
	b2_rfe1_heater2CurrentAttrib():Attr("b2_rfe1_heater2Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_rfe1_heater2CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_rfe1_heater2Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_rfe1_heater2Current_allowed(ty);}
};

//	Attribute b3_rfe1_heater2Current class definition
class b3_rfe1_heater2CurrentAttrib: public Tango::Attr
{
public:
	b3_rfe1_heater2CurrentAttrib():Attr("b3_rfe1_heater2Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_rfe1_heater2CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_rfe1_heater2Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_rfe1_heater2Current_allowed(ty);}
};

//	Attribute b4_rfe1_heater2Current class definition
class b4_rfe1_heater2CurrentAttrib: public Tango::Attr
{
public:
	b4_rfe1_heater2CurrentAttrib():Attr("b4_rfe1_heater2Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_rfe1_heater2CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_rfe1_heater2Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_rfe1_heater2Current_allowed(ty);}
};

//	Attribute b5_rfe1_heater2Current class definition
class b5_rfe1_heater2CurrentAttrib: public Tango::Attr
{
public:
	b5_rfe1_heater2CurrentAttrib():Attr("b5_rfe1_heater2Current",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_rfe1_heater2CurrentAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_rfe1_heater2Current(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_rfe1_heater2Current_allowed(ty);}
};

//	Attribute b1_cryoPressure class definition
class b1_cryoPressureAttrib: public Tango::Attr
{
public:
	b1_cryoPressureAttrib():Attr("b1_cryoPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_cryoPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_cryoPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_cryoPressure_allowed(ty);}
};

//	Attribute b2_cryoPressure class definition
class b2_cryoPressureAttrib: public Tango::Attr
{
public:
	b2_cryoPressureAttrib():Attr("b2_cryoPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_cryoPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_cryoPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_cryoPressure_allowed(ty);}
};

//	Attribute b345_cryoPressure class definition
class b345_cryoPressureAttrib: public Tango::Attr
{
public:
	b345_cryoPressureAttrib():Attr("b345_cryoPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b345_cryoPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b345_cryoPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b345_cryoPressure_allowed(ty);}
};

//	Attribute b1_maniPressure class definition
class b1_maniPressureAttrib: public Tango::Attr
{
public:
	b1_maniPressureAttrib():Attr("b1_maniPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_maniPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_maniPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_maniPressure_allowed(ty);}
};

//	Attribute b2_maniPressure class definition
class b2_maniPressureAttrib: public Tango::Attr
{
public:
	b2_maniPressureAttrib():Attr("b2_maniPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_maniPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_maniPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_maniPressure_allowed(ty);}
};

//	Attribute b345_maniPressure class definition
class b345_maniPressureAttrib: public Tango::Attr
{
public:
	b345_maniPressureAttrib():Attr("b345_maniPressure",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b345_maniPressureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b345_maniPressure(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b345_maniPressure_allowed(ty);}
};

//	Attribute b1_rfe1_temperature class definition
class b1_rfe1_temperatureAttrib: public Tango::Attr
{
public:
	b1_rfe1_temperatureAttrib():Attr("b1_rfe1_temperature",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b1_rfe1_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_rfe1_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_rfe1_temperature_allowed(ty);}
};

//	Attribute b2_rfe1_temperature class definition
class b2_rfe1_temperatureAttrib: public Tango::Attr
{
public:
	b2_rfe1_temperatureAttrib():Attr("b2_rfe1_temperature",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b2_rfe1_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_rfe1_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_rfe1_temperature_allowed(ty);}
};

//	Attribute b3_rfe1_temperature class definition
class b3_rfe1_temperatureAttrib: public Tango::Attr
{
public:
	b3_rfe1_temperatureAttrib():Attr("b3_rfe1_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_rfe1_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_rfe1_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_rfe1_temperature_allowed(ty);}
};

//	Attribute b4_rfe1_temperature class definition
class b4_rfe1_temperatureAttrib: public Tango::Attr
{
public:
	b4_rfe1_temperatureAttrib():Attr("b4_rfe1_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_rfe1_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_rfe1_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_rfe1_temperature_allowed(ty);}
};

//	Attribute b5_rfe1_temperature class definition
class b5_rfe1_temperatureAttrib: public Tango::Attr
{
public:
	b5_rfe1_temperatureAttrib():Attr("b5_rfe1_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_rfe1_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_rfe1_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_rfe1_temperature_allowed(ty);}
};

//	Attribute b1_rfe2_temperature class definition
class b1_rfe2_temperatureAttrib: public Tango::Attr
{
public:
	b1_rfe2_temperatureAttrib():Attr("b1_rfe2_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_rfe2_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_rfe2_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_rfe2_temperature_allowed(ty);}
};

//	Attribute b2_rfe2_temperature class definition
class b2_rfe2_temperatureAttrib: public Tango::Attr
{
public:
	b2_rfe2_temperatureAttrib():Attr("b2_rfe2_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_rfe2_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_rfe2_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_rfe2_temperature_allowed(ty);}
};

//	Attribute b3_rfe2_temperature class definition
class b3_rfe2_temperatureAttrib: public Tango::Attr
{
public:
	b3_rfe2_temperatureAttrib():Attr("b3_rfe2_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_rfe2_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_rfe2_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_rfe2_temperature_allowed(ty);}
};

//	Attribute b4_rfe2_temperature class definition
class b4_rfe2_temperatureAttrib: public Tango::Attr
{
public:
	b4_rfe2_temperatureAttrib():Attr("b4_rfe2_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_rfe2_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_rfe2_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_rfe2_temperature_allowed(ty);}
};

//	Attribute b5_rfe2_temperature class definition
class b5_rfe2_temperatureAttrib: public Tango::Attr
{
public:
	b5_rfe2_temperatureAttrib():Attr("b5_rfe2_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_rfe2_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_rfe2_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_rfe2_temperature_allowed(ty);}
};

//	Attribute b1_omt_temperature class definition
class b1_omt_temperatureAttrib: public Tango::Attr
{
public:
	b1_omt_temperatureAttrib():Attr("b1_omt_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_omt_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_omt_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_omt_temperature_allowed(ty);}
};

//	Attribute b2_omt_temperature class definition
class b2_omt_temperatureAttrib: public Tango::Attr
{
public:
	b2_omt_temperatureAttrib():Attr("b2_omt_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_omt_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_omt_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_omt_temperature_allowed(ty);}
};

//	Attribute b3_omt_temperature class definition
class b3_omt_temperatureAttrib: public Tango::Attr
{
public:
	b3_omt_temperatureAttrib():Attr("b3_omt_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_omt_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_omt_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_omt_temperature_allowed(ty);}
};

//	Attribute b4_omt_temperature class definition
class b4_omt_temperatureAttrib: public Tango::Attr
{
public:
	b4_omt_temperatureAttrib():Attr("b4_omt_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_omt_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_omt_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_omt_temperature_allowed(ty);}
};

//	Attribute b5_omt_temperature class definition
class b5_omt_temperatureAttrib: public Tango::Attr
{
public:
	b5_omt_temperatureAttrib():Attr("b5_omt_temperature",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_omt_temperatureAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_omt_temperature(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_omt_temperature_allowed(ty);}
};

//	Attribute b1_cryocool_stage1Temp class definition
class b1_cryocool_stage1TempAttrib: public Tango::Attr
{
public:
	b1_cryocool_stage1TempAttrib():Attr("b1_cryocool_stage1Temp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_cryocool_stage1TempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_cryocool_stage1Temp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_cryocool_stage1Temp_allowed(ty);}
};

//	Attribute b2_cryocool_stage1Temp class definition
class b2_cryocool_stage1TempAttrib: public Tango::Attr
{
public:
	b2_cryocool_stage1TempAttrib():Attr("b2_cryocool_stage1Temp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_cryocool_stage1TempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_cryocool_stage1Temp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_cryocool_stage1Temp_allowed(ty);}
};

//	Attribute b3_cryocool_stage1Temp class definition
class b3_cryocool_stage1TempAttrib: public Tango::Attr
{
public:
	b3_cryocool_stage1TempAttrib():Attr("b3_cryocool_stage1Temp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_cryocool_stage1TempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_cryocool_stage1Temp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_cryocool_stage1Temp_allowed(ty);}
};

//	Attribute b4_cryocool_stage1Temp class definition
class b4_cryocool_stage1TempAttrib: public Tango::Attr
{
public:
	b4_cryocool_stage1TempAttrib():Attr("b4_cryocool_stage1Temp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_cryocool_stage1TempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_cryocool_stage1Temp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_cryocool_stage1Temp_allowed(ty);}
};

//	Attribute b5_cryocool_stage1Temp class definition
class b5_cryocool_stage1TempAttrib: public Tango::Attr
{
public:
	b5_cryocool_stage1TempAttrib():Attr("b5_cryocool_stage1Temp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_cryocool_stage1TempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_cryocool_stage1Temp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_cryocool_stage1Temp_allowed(ty);}
};

//	Attribute b1_cryostat_bodyTemp class definition
class b1_cryostat_bodyTempAttrib: public Tango::Attr
{
public:
	b1_cryostat_bodyTempAttrib():Attr("b1_cryostat_bodyTemp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_cryostat_bodyTempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_cryostat_bodyTemp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_cryostat_bodyTemp_allowed(ty);}
};

//	Attribute b2_cryostat_bodyTemp class definition
class b2_cryostat_bodyTempAttrib: public Tango::Attr
{
public:
	b2_cryostat_bodyTempAttrib():Attr("b2_cryostat_bodyTemp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_cryostat_bodyTempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_cryostat_bodyTemp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_cryostat_bodyTemp_allowed(ty);}
};

//	Attribute b345_cryostat_bodyTemp class definition
class b345_cryostat_bodyTempAttrib: public Tango::Attr
{
public:
	b345_cryostat_bodyTempAttrib():Attr("b345_cryostat_bodyTemp",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b345_cryostat_bodyTempAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b345_cryostat_bodyTemp(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b345_cryostat_bodyTemp_allowed(ty);}
};

//	Attribute b1_h_meanGain class definition
class b1_h_meanGainAttrib: public Tango::Attr
{
public:
	b1_h_meanGainAttrib():Attr("b1_h_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_h_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_h_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_h_meanGain_allowed(ty);}
};

//	Attribute b2_h_meanGain class definition
class b2_h_meanGainAttrib: public Tango::Attr
{
public:
	b2_h_meanGainAttrib():Attr("b2_h_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_h_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_h_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_h_meanGain_allowed(ty);}
};

//	Attribute b3_h_meanGain class definition
class b3_h_meanGainAttrib: public Tango::Attr
{
public:
	b3_h_meanGainAttrib():Attr("b3_h_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_h_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_h_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_h_meanGain_allowed(ty);}
};

//	Attribute b4_h_meanGain class definition
class b4_h_meanGainAttrib: public Tango::Attr
{
public:
	b4_h_meanGainAttrib():Attr("b4_h_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_h_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_h_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_h_meanGain_allowed(ty);}
};

//	Attribute b5_h_meanGain class definition
class b5_h_meanGainAttrib: public Tango::Attr
{
public:
	b5_h_meanGainAttrib():Attr("b5_h_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_h_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_h_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_h_meanGain_allowed(ty);}
};

//	Attribute b1_v_meanGain class definition
class b1_v_meanGainAttrib: public Tango::Attr
{
public:
	b1_v_meanGainAttrib():Attr("b1_v_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b1_v_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_v_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_v_meanGain_allowed(ty);}
};

//	Attribute b2_v_meanGain class definition
class b2_v_meanGainAttrib: public Tango::Attr
{
public:
	b2_v_meanGainAttrib():Attr("b2_v_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b2_v_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_v_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_v_meanGain_allowed(ty);}
};

//	Attribute b3_v_meanGain class definition
class b3_v_meanGainAttrib: public Tango::Attr
{
public:
	b3_v_meanGainAttrib():Attr("b3_v_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b3_v_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_v_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_v_meanGain_allowed(ty);}
};

//	Attribute b4_v_meanGain class definition
class b4_v_meanGainAttrib: public Tango::Attr
{
public:
	b4_v_meanGainAttrib():Attr("b4_v_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b4_v_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_v_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_v_meanGain_allowed(ty);}
};

//	Attribute b5_v_meanGain class definition
class b5_v_meanGainAttrib: public Tango::Attr
{
public:
	b5_v_meanGainAttrib():Attr("b5_v_meanGain",
			Tango::DEV_FLOAT, Tango::READ) {};
	~b5_v_meanGainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_v_meanGain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_v_meanGain_allowed(ty);}
};

//	Attribute b1_lna_h_powerState class definition
class b1_lna_h_powerStateAttrib: public Tango::Attr
{
public:
	b1_lna_h_powerStateAttrib():Attr("b1_lna_h_powerState",
			Tango::DEV_SHORT, Tango::READ) {};
	~b1_lna_h_powerStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b1_lna_h_powerState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b1_lna_h_powerState_allowed(ty);}
};

//	Attribute b2_lna_h_powerState class definition
class b2_lna_h_powerStateAttrib: public Tango::Attr
{
public:
	b2_lna_h_powerStateAttrib():Attr("b2_lna_h_powerState",
			Tango::DEV_SHORT, Tango::READ) {};
	~b2_lna_h_powerStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b2_lna_h_powerState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b2_lna_h_powerState_allowed(ty);}
};

//	Attribute b3_lna_h_powerState class definition
class b3_lna_h_powerStateAttrib: public Tango::Attr
{
public:
	b3_lna_h_powerStateAttrib():Attr("b3_lna_h_powerState",
			Tango::DEV_SHORT, Tango::READ) {};
	~b3_lna_h_powerStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b3_lna_h_powerState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b3_lna_h_powerState_allowed(ty);}
};

//	Attribute b4_lna_h_powerState class definition
class b4_lna_h_powerStateAttrib: public Tango::Attr
{
public:
	b4_lna_h_powerStateAttrib():Attr("b4_lna_h_powerState",
			Tango::DEV_SHORT, Tango::READ) {};
	~b4_lna_h_powerStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b4_lna_h_powerState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b4_lna_h_powerState_allowed(ty);}
};

//	Attribute b5_lna_h_powerState class definition
class b5_lna_h_powerStateAttrib: public Tango::Attr
{
public:
	b5_lna_h_powerStateAttrib():Attr("b5_lna_h_powerState",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~b5_lna_h_powerStateAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<SPFEmulator *>(dev))->read_b5_lna_h_powerState(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<SPFEmulator *>(dev))->is_b5_lna_h_powerState_allowed(ty);}
};


//=========================================
//	Define classes for commands
//=========================================
//	Command IlluminateLNA class definition
class IlluminateLNAClass : public Tango::Command
{
public:
	IlluminateLNAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	IlluminateLNAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~IlluminateLNAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_IlluminateLNA_allowed(any);}
};

//	Command SetLNAHPowerState class definition
class SetLNAHPowerStateClass : public Tango::Command
{
public:
	SetLNAHPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetLNAHPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetLNAHPowerStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetLNAHPowerState_allowed(any);}
};

//	Command SetLNAVPowerState class definition
class SetLNAVPowerStateClass : public Tango::Command
{
public:
	SetLNAVPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetLNAVPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetLNAVPowerStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetLNAVPowerState_allowed(any);}
};

//	Command SetAmp2HPowerState class definition
class SetAmp2HPowerStateClass : public Tango::Command
{
public:
	SetAmp2HPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetAmp2HPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetAmp2HPowerStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetAmp2HPowerState_allowed(any);}
};

//	Command SetAmp2VPowerState class definition
class SetAmp2VPowerStateClass : public Tango::Command
{
public:
	SetAmp2VPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetAmp2VPowerStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetAmp2VPowerStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetAmp2VPowerState_allowed(any);}
};

//	Command SetRFE1TempDefault class definition
class SetRFE1TempDefaultClass : public Tango::Command
{
public:
	SetRFE1TempDefaultClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetRFE1TempDefaultClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetRFE1TempDefaultClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetRFE1TempDefault_allowed(any);}
};

//	Command SetRFE1TempSetPoint class definition
class SetRFE1TempSetPointClass : public Tango::Command
{
public:
	SetRFE1TempSetPointClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetRFE1TempSetPointClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetRFE1TempSetPointClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetRFE1TempSetPoint_allowed(any);}
};

//	Command SetRFE2TempCntrState class definition
class SetRFE2TempCntrStateClass : public Tango::Command
{
public:
	SetRFE2TempCntrStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetRFE2TempCntrStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetRFE2TempCntrStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetRFE2TempCntrState_allowed(any);}
};

//	Command SetCryoMotorState class definition
class SetCryoMotorStateClass : public Tango::Command
{
public:
	SetCryoMotorStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetCryoMotorStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetCryoMotorStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetCryoMotorState_allowed(any);}
};

//	Command SetCryoMotorSpeed class definition
class SetCryoMotorSpeedClass : public Tango::Command
{
public:
	SetCryoMotorSpeedClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetCryoMotorSpeedClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetCryoMotorSpeedClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetCryoMotorSpeed_allowed(any);}
};

//	Command SetVaValveState class definition
class SetVaValveStateClass : public Tango::Command
{
public:
	SetVaValveStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetVaValveStateClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetVaValveStateClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetVaValveState_allowed(any);}
};

//	Command SetSubElementMode class definition
class SetSubElementModeClass : public Tango::Command
{
public:
	SetSubElementModeClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetSubElementModeClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetSubElementModeClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetSubElementMode_allowed(any);}
};

//	Command SetFeedMode class definition
class SetFeedModeClass : public Tango::Command
{
public:
	SetFeedModeClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetFeedModeClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetFeedModeClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<SPFEmulator *>(dev))->is_SetFeedMode_allowed(any);}
};


/**
 *	The SPFEmulatorClass singleton definition
 */

#ifdef _TG_WINDOWS_
class __declspec(dllexport)  SPFEmulatorClass : public SEEmulatorBase_ns::SEEmulatorBaseClass
#else
class SPFEmulatorClass : public SEEmulatorBase_ns::SEEmulatorBaseClass
#endif
{
	/*----- PROTECTED REGION ID(SPFEmulatorClass::Additionnal DServer data members) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	SPFEmulatorClass::Additionnal DServer data members

	public:
		//	write class properties data members
		Tango::DbData	cl_prop;
		Tango::DbData	cl_def_prop;
		Tango::DbData	dev_def_prop;
	
		//	Method prototypes
		static SPFEmulatorClass *init(const char *);
		static SPFEmulatorClass *instance();
		~SPFEmulatorClass();
		Tango::DbDatum	get_class_property(string &);
		Tango::DbDatum	get_default_device_property(string &);
		Tango::DbDatum	get_default_class_property(string &);
	
	protected:
		SPFEmulatorClass(string &);
		static SPFEmulatorClass *_instance;
		void command_factory();
		void attribute_factory(vector<Tango::Attr *> &);
		void pipe_factory();
		void write_class_property();
		void set_default_property();
		void get_class_property();
		string get_cvstag();
		string get_cvsroot();
	
	private:
		void device_factory(const Tango::DevVarStringArray *);
		void create_static_attribute_list(vector<Tango::Attr *> &);
		void erase_dynamic_attributes(const Tango::DevVarStringArray *,vector<Tango::Attr *> &);
		vector<string>	defaultAttList;
		Tango::Attr *get_attr_object_by_name(vector<Tango::Attr *> &att_list, string attname);
};

}	//	End of namespace

#endif   //	SPFEmulator_H
